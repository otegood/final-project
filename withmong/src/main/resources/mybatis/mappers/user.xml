<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.withmong.dao.UserDao">
	
	<insert id="insertUser" parameterType="User">
		insert into user_table
		(id, password, name, birth, email, phone, gender, schoolAbility, question, answer, point, grade, img, sumLike, delCheck)
		values
		(#{id}, #{password}, #{name}, #{birth}, #{email}, #{phone}, #{gender}, #{schoolAbility}, #{question}, #{answer}, 0, 'B', #{img}, 0, 'N')
	</insert>
	
	<select id="getUserById" parameterType="string" resultType="User">
		select
			id, password, name, birth, email, phone, gender, schoolAbility, question, answer, point, grade, img, sumLike, delCheck
		from
			user_table
		where
			id = #{value}
	</select>
	
	<!-- 전화번호 찾기 -->
	<select id="getUserByPhone" parameterType="string" resultType="User">
		select
			id, password, name, birth, email, phone, gender, schoolAbility, question, answer, point, grade, img, sumLike, delCheck
		from
			user_table
		where
			phone = #{value}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="User" resultType="User">
		select
			id
		from
			user_table
		where
			name = #{name}
		and
			birth = #{birth}
		and
			phone = #{phone}
	</select>
	
	<!-- 비밀번호 찾기위해 정보 얻기 -->
	<select id="findInfoPassword" parameterType="User" resultType="User">
		select
			*
		from
			user_table
		where
			id = #{id}
		and
			question = #{question}
		and
			answer = #{answer}
	</select>
	
	
	<update id="changePassword" parameterType="User">
		update user_table 
		set password = #{password}
		where id = #{id}
	</update>
	
	<update id="myInfoModify" parameterType="User">
		update user_table
		set 	password = #{password},
				email = #{email},
			 	phone = #{phone},
				gender = #{gender},
				schoolAbility = #{schoolAbility},
				question = #{question},
			 	answer = #{answer},
			 	img = #{img}
		where id = #{id}
	</update>

	<!-- 신고하기 기능 -->
	<insert id="reportUser" parameterType="Report">
		insert into report_table
		(no, contents, regdate, reason, reporter, suspect)
		values
		(test_seq.nextval, #{contents}, sysdate, #{reason}, #{reporter.id}, #{suspect.id})
	</insert>

	<!-- 내 구매 정보 보기 기능 (Product에 들어갈 예정)--> 
	<select id="myPurchase" parameterType="string" resultType="Order">
		select
			o.no 			as no, 
			o.regdate 		as regdate, 
			o.userid		as "userid.id", 
			o.productNo		as "productNo.no", 
			o.qty			as qty,
			o.price			as price,
			o.buyCheck		as buyCheck,
			p.userid		as "productNo.userid",
			p.title			as "productNo.title",
			p.price			as "productNo.price"
		from
			order_table o, product_table p 
		where
			o.productno = p.no
		and	
			o.userid = #{value}
	</select>
	
	<!--  내 판매 정보 보기 기능 (Product에 들어갈 예정)-->
	<select id="mySell" parameterType="string" resultType="Order">
		select
			o.no 			as no, 
			o.regdate 		as regdate, 
			o.userid		as "userid.id", 
			o.productNo		as "productNo.no", 
			o.buyCheck		as buyCheck,
			o.qty			as qty,
			o.price			as price,
			p.userid		as "productNo.userid",
			p.title			as "productNo.title",
			p.price			as "productNo.price"
		from
			order_table o, product_table p 
		where
			o.productno = p.no
		and	
			p.userid = #{value}
	</select>
	
	<!-- 1) 내 구매정보 삭제하기 -->
	<delete id="deletePurchase" parameterType="int">
		delete from order_table
		where no=#{value}
	</delete>
	
	<!-- 2) 상품가격확인하는 select 문 -->
	<select id="getOrderInfoByNo" parameterType="int" resultType="Order">
		select
			o.no 			as no, 
			o.regdate 		as regdate, 
			o.userid		as "userid.id", 
			o.productNo		as "productNo.no", 
			o.qty			as qty,
			o.price			as price,
			p.userid		as "productNo.userid",
			p.title			as "productNo.title",
			p.price			as "productNo.price"
		from
			order_table o, product_table p 
		where
			o.productno = p.no
		and	
			o.no = #{value}
	</select>
	<!-- 3) 관리자에서 포인트 차감 update 문 -->
	<update id="deductionAdminPoint" parameterType="int">
		update user_table 
		set point = point - #{value}
		where id = 'king'
	</update>
	<!-- 4) 구매자 포인트 증가 update 문 -->
	<update id="increasePurchasePoint" parameterType="Order">
		update user_table
		set point = point + #{price}
		where id = #{userid.id}
	</update>
	
	
	<!-- (판매)1. 판매 거부 -->
	<update id="denySell" parameterType="int">
		update order_table
		set buycheck = 'N'
		where no = #{value}
	</update>
	<!-- (판매)5. 물품 qty 증가 update 문 -->
	<update id="getPlusQty" parameterType="Order">
		update product_table
		set qty = qty + #{qty}
		where no = #{productNo.no}
	</update>
	
	
	<!-- (판매)1. 관리자 포인트 차감 -->
	<update id="getDevideAdminPoint" parameterType="int">
		update user_table 
		set point = point - (#{value}*0.9)
		where id = 'king'
	</update>
	<!-- (판매)2. 판매자 포인트 증가 update 문 -->
	<update id="getPointSeller" parameterType="Order">
		update user_table
		set point = point + (#{price}*0.9)
		where id = #{productNo.userid}
	</update>
	<!-- (판매)3. 구분자 변경 -->
	<update id="confirmSell" parameterType="int">
		update order_table
		set buycheck = 'Y'
		where no = #{value}
	</update>
	
	
	
	<!-- 아이디에 따른 상품정보 검색하기 -->
	<select id="getProductById" parameterType="String" resultType="Product">
		select
			*
		from
			product_table
		where
			userid = #{value}
	</select>
	
	<!-- 아이디에 따른 나의 찜한 상품 보기 -->
	<select id="getCartById" parameterType="String" resultType="Cart">
		select
			c.no 			as no, 
			c.userid 		as "userid.id", 
			c.productNo		as "productNo.no", 
			p.userid		as "productNo.userid",
			p.title			as "productNo.title",
			p.price			as "productNo.price"
		from
			cart_table c, product_table p 
		where
			c.productno = p.no
		and	
			c.userid = #{value}
	</select>
	
	<!-- 찜번호로 찜 목록 학제하기 -->
	<delete id="delCartByNo" parameterType="int">
		delete from cart_table
		where no=#{value}
	</delete>
</mapper>